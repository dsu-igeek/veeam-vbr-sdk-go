/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br>Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic.
 *
 * API version: 1.1-rev0
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// EInstantViVMRecoveryMountsFiltersOrderColumn the model 'EInstantViVMRecoveryMountsFiltersOrderColumn'
type EInstantViVMRecoveryMountsFiltersOrderColumn string

// List of EInstantViVMRecoveryMountsFiltersOrderColumn
const (
	EINSTANTVIVMRECOVERYMOUNTSFILTERSORDERCOLUMN_STATE EInstantViVMRecoveryMountsFiltersOrderColumn = "state"
	EINSTANTVIVMRECOVERYMOUNTSFILTERSORDERCOLUMN_NAME EInstantViVMRecoveryMountsFiltersOrderColumn = "name"
)

func (v *EInstantViVMRecoveryMountsFiltersOrderColumn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EInstantViVMRecoveryMountsFiltersOrderColumn(value)
	for _, existing := range []EInstantViVMRecoveryMountsFiltersOrderColumn{ "state", "name",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EInstantViVMRecoveryMountsFiltersOrderColumn", value)
}

// Ptr returns reference to EInstantViVMRecoveryMountsFiltersOrderColumn value
func (v EInstantViVMRecoveryMountsFiltersOrderColumn) Ptr() *EInstantViVMRecoveryMountsFiltersOrderColumn {
	return &v
}

type NullableEInstantViVMRecoveryMountsFiltersOrderColumn struct {
	value *EInstantViVMRecoveryMountsFiltersOrderColumn
	isSet bool
}

func (v NullableEInstantViVMRecoveryMountsFiltersOrderColumn) Get() *EInstantViVMRecoveryMountsFiltersOrderColumn {
	return v.value
}

func (v *NullableEInstantViVMRecoveryMountsFiltersOrderColumn) Set(val *EInstantViVMRecoveryMountsFiltersOrderColumn) {
	v.value = val
	v.isSet = true
}

func (v NullableEInstantViVMRecoveryMountsFiltersOrderColumn) IsSet() bool {
	return v.isSet
}

func (v *NullableEInstantViVMRecoveryMountsFiltersOrderColumn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEInstantViVMRecoveryMountsFiltersOrderColumn(val *EInstantViVMRecoveryMountsFiltersOrderColumn) *NullableEInstantViVMRecoveryMountsFiltersOrderColumn {
	return &NullableEInstantViVMRecoveryMountsFiltersOrderColumn{value: val, isSet: true}
}

func (v NullableEInstantViVMRecoveryMountsFiltersOrderColumn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEInstantViVMRecoveryMountsFiltersOrderColumn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

