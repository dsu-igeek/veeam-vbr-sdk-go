/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br>Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic.
 *
 * API version: 1.1-rev0
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// ECloudCredentialsType the model 'ECloudCredentialsType'
type ECloudCredentialsType string

// List of ECloudCredentialsType
const (
	ECLOUDCREDENTIALSTYPE_AZURE_STORAGE ECloudCredentialsType = "AzureStorage"
	ECLOUDCREDENTIALSTYPE_AZURE_COMPUTE ECloudCredentialsType = "AzureCompute"
	ECLOUDCREDENTIALSTYPE_AMAZON ECloudCredentialsType = "Amazon"
	ECLOUDCREDENTIALSTYPE_GOOGLE ECloudCredentialsType = "Google"
)

func (v *ECloudCredentialsType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ECloudCredentialsType(value)
	for _, existing := range []ECloudCredentialsType{ "AzureStorage", "AzureCompute", "Amazon", "Google",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ECloudCredentialsType", value)
}

// Ptr returns reference to ECloudCredentialsType value
func (v ECloudCredentialsType) Ptr() *ECloudCredentialsType {
	return &v
}

type NullableECloudCredentialsType struct {
	value *ECloudCredentialsType
	isSet bool
}

func (v NullableECloudCredentialsType) Get() *ECloudCredentialsType {
	return v.value
}

func (v *NullableECloudCredentialsType) Set(val *ECloudCredentialsType) {
	v.value = val
	v.isSet = true
}

func (v NullableECloudCredentialsType) IsSet() bool {
	return v.isSet
}

func (v *NullableECloudCredentialsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableECloudCredentialsType(val *ECloudCredentialsType) *NullableECloudCredentialsType {
	return &NullableECloudCredentialsType{value: val, isSet: true}
}

func (v NullableECloudCredentialsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableECloudCredentialsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

