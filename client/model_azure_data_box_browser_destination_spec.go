/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br>Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic.
 *
 * API version: 1.1-rev0
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AzureDataBoxBrowserDestinationSpec struct for AzureDataBoxBrowserDestinationSpec
type AzureDataBoxBrowserDestinationSpec struct {
	CloudBrowserNewFolderSpec
	HostId *string `json:"hostId,omitempty"`
	ContainerName string `json:"containerName"`
	ServicePoint string `json:"servicePoint"`
}

// NewAzureDataBoxBrowserDestinationSpec instantiates a new AzureDataBoxBrowserDestinationSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureDataBoxBrowserDestinationSpec(containerName string, servicePoint string, ) *AzureDataBoxBrowserDestinationSpec {
	this := AzureDataBoxBrowserDestinationSpec{}
	this.ContainerName = containerName
	this.ServicePoint = servicePoint
	return &this
}

// NewAzureDataBoxBrowserDestinationSpecWithDefaults instantiates a new AzureDataBoxBrowserDestinationSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureDataBoxBrowserDestinationSpecWithDefaults() *AzureDataBoxBrowserDestinationSpec {
	this := AzureDataBoxBrowserDestinationSpec{}
	return &this
}

// GetHostId returns the HostId field value if set, zero value otherwise.
func (o *AzureDataBoxBrowserDestinationSpec) GetHostId() string {
	if o == nil || o.HostId == nil {
		var ret string
		return ret
	}
	return *o.HostId
}

// GetHostIdOk returns a tuple with the HostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureDataBoxBrowserDestinationSpec) GetHostIdOk() (*string, bool) {
	if o == nil || o.HostId == nil {
		return nil, false
	}
	return o.HostId, true
}

// HasHostId returns a boolean if a field has been set.
func (o *AzureDataBoxBrowserDestinationSpec) HasHostId() bool {
	if o != nil && o.HostId != nil {
		return true
	}

	return false
}

// SetHostId gets a reference to the given string and assigns it to the HostId field.
func (o *AzureDataBoxBrowserDestinationSpec) SetHostId(v string) {
	o.HostId = &v
}

// GetContainerName returns the ContainerName field value
func (o *AzureDataBoxBrowserDestinationSpec) GetContainerName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ContainerName
}

// GetContainerNameOk returns a tuple with the ContainerName field value
// and a boolean to check if the value has been set.
func (o *AzureDataBoxBrowserDestinationSpec) GetContainerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ContainerName, true
}

// SetContainerName sets field value
func (o *AzureDataBoxBrowserDestinationSpec) SetContainerName(v string) {
	o.ContainerName = v
}

// GetServicePoint returns the ServicePoint field value
func (o *AzureDataBoxBrowserDestinationSpec) GetServicePoint() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ServicePoint
}

// GetServicePointOk returns a tuple with the ServicePoint field value
// and a boolean to check if the value has been set.
func (o *AzureDataBoxBrowserDestinationSpec) GetServicePointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ServicePoint, true
}

// SetServicePoint sets field value
func (o *AzureDataBoxBrowserDestinationSpec) SetServicePoint(v string) {
	o.ServicePoint = v
}

func (o AzureDataBoxBrowserDestinationSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedCloudBrowserNewFolderSpec, errCloudBrowserNewFolderSpec := json.Marshal(o.CloudBrowserNewFolderSpec)
	if errCloudBrowserNewFolderSpec != nil {
		return []byte{}, errCloudBrowserNewFolderSpec
	}
	errCloudBrowserNewFolderSpec = json.Unmarshal([]byte(serializedCloudBrowserNewFolderSpec), &toSerialize)
	if errCloudBrowserNewFolderSpec != nil {
		return []byte{}, errCloudBrowserNewFolderSpec
	}
	if o.HostId != nil {
		toSerialize["hostId"] = o.HostId
	}
	if true {
		toSerialize["containerName"] = o.ContainerName
	}
	if true {
		toSerialize["servicePoint"] = o.ServicePoint
	}
	return json.Marshal(toSerialize)
}

type NullableAzureDataBoxBrowserDestinationSpec struct {
	value *AzureDataBoxBrowserDestinationSpec
	isSet bool
}

func (v NullableAzureDataBoxBrowserDestinationSpec) Get() *AzureDataBoxBrowserDestinationSpec {
	return v.value
}

func (v *NullableAzureDataBoxBrowserDestinationSpec) Set(val *AzureDataBoxBrowserDestinationSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureDataBoxBrowserDestinationSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureDataBoxBrowserDestinationSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureDataBoxBrowserDestinationSpec(val *AzureDataBoxBrowserDestinationSpec) *NullableAzureDataBoxBrowserDestinationSpec {
	return &NullableAzureDataBoxBrowserDestinationSpec{value: val, isSet: true}
}

func (v NullableAzureDataBoxBrowserDestinationSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureDataBoxBrowserDestinationSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


