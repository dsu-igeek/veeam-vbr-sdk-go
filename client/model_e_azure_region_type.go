/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br>Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic.
 *
 * API version: 1.1-rev0
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// EAzureRegionType Azure region type.
type EAzureRegionType string

// List of EAzureRegionType
const (
	EAZUREREGIONTYPE_CHINA EAzureRegionType = "China"
	EAZUREREGIONTYPE_GERMANY EAzureRegionType = "Germany"
	EAZUREREGIONTYPE_GLOBAL EAzureRegionType = "Global"
	EAZUREREGIONTYPE_GOVERNMENT EAzureRegionType = "Government"
)

func (v *EAzureRegionType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EAzureRegionType(value)
	for _, existing := range []EAzureRegionType{ "China", "Germany", "Global", "Government",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EAzureRegionType", value)
}

// Ptr returns reference to EAzureRegionType value
func (v EAzureRegionType) Ptr() *EAzureRegionType {
	return &v
}

type NullableEAzureRegionType struct {
	value *EAzureRegionType
	isSet bool
}

func (v NullableEAzureRegionType) Get() *EAzureRegionType {
	return v.value
}

func (v *NullableEAzureRegionType) Set(val *EAzureRegionType) {
	v.value = val
	v.isSet = true
}

func (v NullableEAzureRegionType) IsSet() bool {
	return v.isSet
}

func (v *NullableEAzureRegionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEAzureRegionType(val *EAzureRegionType) *NullableEAzureRegionType {
	return &NullableEAzureRegionType{value: val, isSet: true}
}

func (v NullableEAzureRegionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEAzureRegionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

