/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br>Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic.
 *
 * API version: 1.1-rev0
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// GoogleCloudCredentialsSpec struct for GoogleCloudCredentialsSpec
type GoogleCloudCredentialsSpec struct {
	CloudCredentialsSpec
	AccessKey *string `json:"accessKey,omitempty"`
	SecretKey *string `json:"secretKey,omitempty"`
	// Tag used to identify the credentials record.
	Tag *string `json:"tag,omitempty"`
}

// NewGoogleCloudCredentialsSpec instantiates a new GoogleCloudCredentialsSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoogleCloudCredentialsSpec() *GoogleCloudCredentialsSpec {
	this := GoogleCloudCredentialsSpec{}
	return &this
}

// NewGoogleCloudCredentialsSpecWithDefaults instantiates a new GoogleCloudCredentialsSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudCredentialsSpecWithDefaults() *GoogleCloudCredentialsSpec {
	this := GoogleCloudCredentialsSpec{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *GoogleCloudCredentialsSpec) GetAccessKey() string {
	if o == nil || o.AccessKey == nil {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleCloudCredentialsSpec) GetAccessKeyOk() (*string, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *GoogleCloudCredentialsSpec) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *GoogleCloudCredentialsSpec) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *GoogleCloudCredentialsSpec) GetSecretKey() string {
	if o == nil || o.SecretKey == nil {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleCloudCredentialsSpec) GetSecretKeyOk() (*string, bool) {
	if o == nil || o.SecretKey == nil {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *GoogleCloudCredentialsSpec) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *GoogleCloudCredentialsSpec) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *GoogleCloudCredentialsSpec) GetTag() string {
	if o == nil || o.Tag == nil {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleCloudCredentialsSpec) GetTagOk() (*string, bool) {
	if o == nil || o.Tag == nil {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *GoogleCloudCredentialsSpec) HasTag() bool {
	if o != nil && o.Tag != nil {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *GoogleCloudCredentialsSpec) SetTag(v string) {
	o.Tag = &v
}

func (o GoogleCloudCredentialsSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedCloudCredentialsSpec, errCloudCredentialsSpec := json.Marshal(o.CloudCredentialsSpec)
	if errCloudCredentialsSpec != nil {
		return []byte{}, errCloudCredentialsSpec
	}
	errCloudCredentialsSpec = json.Unmarshal([]byte(serializedCloudCredentialsSpec), &toSerialize)
	if errCloudCredentialsSpec != nil {
		return []byte{}, errCloudCredentialsSpec
	}
	if o.AccessKey != nil {
		toSerialize["accessKey"] = o.AccessKey
	}
	if o.SecretKey != nil {
		toSerialize["secretKey"] = o.SecretKey
	}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	return json.Marshal(toSerialize)
}

type NullableGoogleCloudCredentialsSpec struct {
	value *GoogleCloudCredentialsSpec
	isSet bool
}

func (v NullableGoogleCloudCredentialsSpec) Get() *GoogleCloudCredentialsSpec {
	return v.value
}

func (v *NullableGoogleCloudCredentialsSpec) Set(val *GoogleCloudCredentialsSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleCloudCredentialsSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleCloudCredentialsSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleCloudCredentialsSpec(val *GoogleCloudCredentialsSpec) *NullableGoogleCloudCredentialsSpec {
	return &NullableGoogleCloudCredentialsSpec{value: val, isSet: true}
}

func (v NullableGoogleCloudCredentialsSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleCloudCredentialsSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


