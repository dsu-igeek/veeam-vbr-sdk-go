/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br>Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic.
 *
 * API version: 1.1-rev0
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AmazonSnowballEdgeBrowserModel struct for AmazonSnowballEdgeBrowserModel
type AmazonSnowballEdgeBrowserModel struct {
	CloudBrowserModel
	HostId *string `json:"hostId,omitempty"`
	ConnectionPoint *string `json:"connectionPoint,omitempty"`
	Regions *[]AmazonSnowballEdgeRegionBrowserModel `json:"regions,omitempty"`
}

// NewAmazonSnowballEdgeBrowserModel instantiates a new AmazonSnowballEdgeBrowserModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmazonSnowballEdgeBrowserModel() *AmazonSnowballEdgeBrowserModel {
	this := AmazonSnowballEdgeBrowserModel{}
	return &this
}

// NewAmazonSnowballEdgeBrowserModelWithDefaults instantiates a new AmazonSnowballEdgeBrowserModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmazonSnowballEdgeBrowserModelWithDefaults() *AmazonSnowballEdgeBrowserModel {
	this := AmazonSnowballEdgeBrowserModel{}
	return &this
}

// GetHostId returns the HostId field value if set, zero value otherwise.
func (o *AmazonSnowballEdgeBrowserModel) GetHostId() string {
	if o == nil || o.HostId == nil {
		var ret string
		return ret
	}
	return *o.HostId
}

// GetHostIdOk returns a tuple with the HostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmazonSnowballEdgeBrowserModel) GetHostIdOk() (*string, bool) {
	if o == nil || o.HostId == nil {
		return nil, false
	}
	return o.HostId, true
}

// HasHostId returns a boolean if a field has been set.
func (o *AmazonSnowballEdgeBrowserModel) HasHostId() bool {
	if o != nil && o.HostId != nil {
		return true
	}

	return false
}

// SetHostId gets a reference to the given string and assigns it to the HostId field.
func (o *AmazonSnowballEdgeBrowserModel) SetHostId(v string) {
	o.HostId = &v
}

// GetConnectionPoint returns the ConnectionPoint field value if set, zero value otherwise.
func (o *AmazonSnowballEdgeBrowserModel) GetConnectionPoint() string {
	if o == nil || o.ConnectionPoint == nil {
		var ret string
		return ret
	}
	return *o.ConnectionPoint
}

// GetConnectionPointOk returns a tuple with the ConnectionPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmazonSnowballEdgeBrowserModel) GetConnectionPointOk() (*string, bool) {
	if o == nil || o.ConnectionPoint == nil {
		return nil, false
	}
	return o.ConnectionPoint, true
}

// HasConnectionPoint returns a boolean if a field has been set.
func (o *AmazonSnowballEdgeBrowserModel) HasConnectionPoint() bool {
	if o != nil && o.ConnectionPoint != nil {
		return true
	}

	return false
}

// SetConnectionPoint gets a reference to the given string and assigns it to the ConnectionPoint field.
func (o *AmazonSnowballEdgeBrowserModel) SetConnectionPoint(v string) {
	o.ConnectionPoint = &v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *AmazonSnowballEdgeBrowserModel) GetRegions() []AmazonSnowballEdgeRegionBrowserModel {
	if o == nil || o.Regions == nil {
		var ret []AmazonSnowballEdgeRegionBrowserModel
		return ret
	}
	return *o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmazonSnowballEdgeBrowserModel) GetRegionsOk() (*[]AmazonSnowballEdgeRegionBrowserModel, bool) {
	if o == nil || o.Regions == nil {
		return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *AmazonSnowballEdgeBrowserModel) HasRegions() bool {
	if o != nil && o.Regions != nil {
		return true
	}

	return false
}

// SetRegions gets a reference to the given []AmazonSnowballEdgeRegionBrowserModel and assigns it to the Regions field.
func (o *AmazonSnowballEdgeBrowserModel) SetRegions(v []AmazonSnowballEdgeRegionBrowserModel) {
	o.Regions = &v
}

func (o AmazonSnowballEdgeBrowserModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedCloudBrowserModel, errCloudBrowserModel := json.Marshal(o.CloudBrowserModel)
	if errCloudBrowserModel != nil {
		return []byte{}, errCloudBrowserModel
	}
	errCloudBrowserModel = json.Unmarshal([]byte(serializedCloudBrowserModel), &toSerialize)
	if errCloudBrowserModel != nil {
		return []byte{}, errCloudBrowserModel
	}
	if o.HostId != nil {
		toSerialize["hostId"] = o.HostId
	}
	if o.ConnectionPoint != nil {
		toSerialize["connectionPoint"] = o.ConnectionPoint
	}
	if o.Regions != nil {
		toSerialize["regions"] = o.Regions
	}
	return json.Marshal(toSerialize)
}

type NullableAmazonSnowballEdgeBrowserModel struct {
	value *AmazonSnowballEdgeBrowserModel
	isSet bool
}

func (v NullableAmazonSnowballEdgeBrowserModel) Get() *AmazonSnowballEdgeBrowserModel {
	return v.value
}

func (v *NullableAmazonSnowballEdgeBrowserModel) Set(val *AmazonSnowballEdgeBrowserModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAmazonSnowballEdgeBrowserModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAmazonSnowballEdgeBrowserModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmazonSnowballEdgeBrowserModel(val *AmazonSnowballEdgeBrowserModel) *NullableAmazonSnowballEdgeBrowserModel {
	return &NullableAmazonSnowballEdgeBrowserModel{value: val, isSet: true}
}

func (v NullableAmazonSnowballEdgeBrowserModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmazonSnowballEdgeBrowserModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


